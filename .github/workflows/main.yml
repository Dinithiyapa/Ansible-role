name: Docker Build and Deploy to Linode

on:
  push:
    branches:
      - main

jobs:
  build-web:
    name: Build Web Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Web image
        uses: docker/build-push-action@v4
        with:
          context: ./web  # Path to the Web's Dockerfile
          push: true
          tags: yapadinithi/buzbud-web-action:${{ github.run_number }}-${{ github.run_attempt }}

  build-api:
    name: Build API Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push API image
        uses: docker/build-push-action@v4
        with:
          context: ./api  # Path to the API's Dockerfile
          push: true
          tags: yapadinithi/buzbud-api-action:${{ github.run_number }}-${{ github.run_attempt }}

  deploy-ansible:
    name: Deploy with Ansible
    needs:
      - build-web
      - build-api
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Deploy to Host 1
      - name: Execute remote SSH commands on Host 1
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}  # IP of the Linode host
          username: ${{ secrets.USERNAME }}  # Username for SSH access
          password: ${{ secrets.PASSWORD }}  # Password for SSH access
          port: ${{ secrets.PORT }}  # SSH port
          script: |
            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
              echo "Docker could not be found, installing Docker..."
              sudo apt-get update
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # Stop and remove existing containers if they exist
            docker ps -a -q -f name=web-container | xargs -r docker rm -f
            docker ps -a -q -f name=api-container | xargs -r docker rm -f

            # Pull the latest Docker images
            docker pull yapadinithi/buzbud-web-action:${{ github.run_number }}-${{ github.run_attempt }}
            docker pull yapadinithi/buzbud-api-action:${{ github.run_number }}-${{ github.run_attempt }}

            # Run the containers
            docker run -d -p 8081:80 --name web-container yapadinithi/buzbud-web-action:${{ github.run_number }}-${{ github.run_attempt }}
            docker run -d -p 8080:8080 --name api-container yapadinithi/buzbud-api-action:${{ github.run_number }}-${{ github.run_attempt }}

            # Optionally, run other commands
            cd /path/to/your/deployment/directory
            bash update.sh  # Run the update script
